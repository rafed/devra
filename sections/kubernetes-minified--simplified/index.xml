<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes Minified and Simplified on DevRa</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/</link><description>Recent content in Kubernetes Minified and Simplified on DevRa</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 18 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rafed.github.io/devra/sections/kubernetes-minified--simplified/index.xml" rel="self" type="application/rss+xml"/><item><title>#05 - Kubernetes Autoscaling</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/5.-kubernetes-auto-scaling/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/5.-kubernetes-auto-scaling/</guid><description>&lt;p>In the previous blog post we deployed an nginx container with 3 replicas. Replicas allows us to upscale an application and increase its availability and performance. However, we generally want the replica count of a pod to be dynamic. When demand increases, number of pods should increase. And when demand decreases, the number of pods should decrease.&lt;/p></description></item><item><title>#04 - Kubernetes: From Writing Code to Deploying in Kubernetes</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/4.-kubernetes-code-to-deployment/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/4.-kubernetes-code-to-deployment/</guid><description>&lt;p>A typical Kubernetes workflow follows the following steps-&lt;/p>
&lt;ol>
&lt;li>Write code&lt;/li>
&lt;li>Containerize app&lt;/li>
&lt;li>Send to container registry&lt;/li>
&lt;li>Deploy to Kubernetes&lt;/li>
&lt;/ol>
&lt;div class="mermaid">
 graph TD
 A[Write Code] --> B
 B[Containerzie app] --> C
 C[Send to container registry] --> D[Deploy to Kubernetes]
&lt;/div>
&lt;h4 id="1-write-code">1. Write Code&lt;/h4>
&lt;p>This step is pretty self explanatory. We write code that solves a business problem. For microservices/distributed systems we write code in multiple small cohesive services so that they can be deployed independently.&lt;/p></description></item><item><title>#03 - Kubernetes Storage</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/3.-kubernetes-storage/</link><pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/3.-kubernetes-storage/</guid><description>&lt;p>Pods in Kubernetes are volatile. That means if a pod crashes or restarts then the data stored previously is lost. &lt;strong>Volumes&lt;/strong> in Kubernetes decouple storage from pods and provides a method for persisting data.&lt;/p>
&lt;p>For persistent storage in Kubernetes, we need to know 3 things.&lt;/p></description></item><item><title>#02 - Kubernetes Networking</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/2.-kubernetes-networking/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/2.-kubernetes-networking/</guid><description>&lt;p>Kubernetes is a container orchestration platform. It is used to help containers in a cluster communicate between them in an easy way. This is where networking in Kubernetes kicks in. To understand how Kubernetes works, knowing its basic underlying networking concepts is a fundamental necessity.&lt;/p></description></item><item><title>#01 - Kubernetes Overview</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/1.-kubernetes-basics/</link><pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/1.-kubernetes-basics/</guid><description>&lt;h4 id="what-is-kubernetes">What is Kubernetes?&lt;/h4>
&lt;ul>
&lt;li>Kubernetes is an open source platform for running &lt;strong>cloud native apps&lt;/strong>&lt;/li>
&lt;li>Its a layer over Vms and provide a rich set of APIs for running cloud native apps&lt;/li>
&lt;/ul>
&lt;h4 id="what-are-cloud-native-apps">What are cloud native apps?&lt;/h4>
&lt;ul>
&lt;li>Cloud native apps are built of small interacting services that work together to do something useful&lt;/li>
&lt;li>Making them small makes them easy to &lt;strong>scale&lt;/strong> and &lt;strong>update&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="prerequisites-to-learn-kubernetes">Prerequisites to learn Kubernetes?&lt;/h4>
&lt;p>Compulsory requirements-&lt;/p></description></item><item><title>#00 - Kubernetes CLI Cheat Sheet (kubectl, helm, minikube)</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/0.-kubernetes-cheat-sheet-kubectl-helm-minikube/</link><pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/0.-kubernetes-cheat-sheet-kubectl-helm-minikube/</guid><description>&lt;p>This cheat sheet focuses on the most important CLI commands for Kubectl, helm and minikube CLIs.&lt;/p>
&lt;p>But what are the differences between them you ask?&lt;/p>
&lt;ul>
&lt;li>&lt;strong>kubectl&lt;/strong>: The most important CLI to learn. It is used to manage a Kubernetes cluster&lt;/li>
&lt;li>&lt;strong>helm&lt;/strong>: Package manager for Kubernetes. It is sort of like &lt;em>apt install&lt;/em> in Linux but for installing services in Kubernetes clusters&lt;/li>
&lt;li>&lt;strong>minikube&lt;/strong>: CLI for running Kubernetes locally&lt;/li>
&lt;/ul>
&lt;h2 id="1-kubectl">1. kubectl&lt;/h2>
&lt;h4 id="enable-autocomplete">Enable autocomplete&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ source &amp;lt;&lt;span style="color:#f92672">(&lt;/span>kubectl completion bash&lt;span style="color:#f92672">)&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;source &amp;lt;(kubectl completion bash)&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="context-and-configuration">Context and configuration&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl config current-context
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl config view
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl config set-context mia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl config use-context mia
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="run-yaml-files--make-infrastructural-changes">Run Yaml files / Make infrastructural changes&lt;/h4>
&lt;h5 id="make-a-deployment">Make a deployment&lt;/h5>
&lt;p>&lt;em>Make sure to make a my-manifest.yaml file first!&lt;/em>&lt;/p></description></item></channel></rss>