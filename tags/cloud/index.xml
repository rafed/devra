<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud on DevRa</title><link>https://rafed.github.io/devra/tags/cloud/</link><description>Recent content in Cloud on DevRa</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 02 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://rafed.github.io/devra/tags/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Run JupyterLab on OpenGPU Cluster with SLURM at UCI</title><link>https://rafed.github.io/devra/posts/cloud/opengpu-slurm-uci/</link><pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/opengpu-slurm-uci/</guid><description>&lt;p>As a graduate student in UCI&amp;rsquo;s IN4MATIX program, exploring the resources available on the Donald Bren School Computing Support page (&lt;a href="https://wiki.ics.uci.edu/doku.php">wiki.ics.uci.edu&lt;/a>) is truly fascinating. While most of the documentation is quite clear, I noticed that there is a lack of detailed guidance on utilizing the OpenGPU cluster. In this guide, I will provide you with a comprehensive walkthrough to help you effectively harness the power of the GPUs.&lt;/p></description></item><item><title>AWS S3 Cannot Delete Objects (even with Full S3 Permissions)</title><link>https://rafed.github.io/devra/posts/cloud/aws/aws-s3-cannot-delete-object/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/aws/aws-s3-cannot-delete-object/</guid><description>&lt;p>I pulled my hair for 3 hours before solving this. Now here&amp;rsquo;s the solution so that you don&amp;rsquo;t have to pull yours.&lt;/p>
&lt;p>Here&amp;rsquo;s the scenario:&lt;/p>
&lt;ul>
&lt;li>There is a S3 bucket&lt;/li>
&lt;li>There is an IAM user whose purpose is to access the bucket (create/update/delete objects)&lt;/li>
&lt;li>The IAM user has full S3 permissions on the bucket&lt;/li>
&lt;li>The IAM user can create/update objects but cannot delete objects (WTF???)&lt;/li>
&lt;/ul>
&lt;p>Yes, you read that right. The IAM user has full &lt;strong>S3:&lt;/strong>* permissions to access the bucket but it cannot delete objects. If you&amp;rsquo;re not convinced, here&amp;rsquo;s the terraform config of the policy attached to the IAM:&lt;/p></description></item><item><title>Django Metrics, Logs &amp; Traces Observability with Opentelemetry and Grafana</title><link>https://rafed.github.io/devra/posts/cloud/django-mlt-observability-with-opentelemetry/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/django-mlt-observability-with-opentelemetry/</guid><description>&lt;p>Metrics, Logs and Traces (MLT) are the three pillars of observability that can provide us with complete visibility of a software system. In this article, we&amp;rsquo;re going to set up a system where MLT data is collected from a hello-world microservice application.&lt;/p></description></item><item><title>#05 - Kubernetes Autoscaling</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/5.-kubernetes-auto-scaling/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/5.-kubernetes-auto-scaling/</guid><description>&lt;p>In the previous blog post we deployed an nginx container with 3 replicas. Replicas allows us to upscale an application and increase its availability and performance. However, we generally want the replica count of a pod to be dynamic. When demand increases, number of pods should increase. And when demand decreases, the number of pods should decrease.&lt;/p></description></item><item><title>#04 - Kubernetes: From Writing Code to Deploying in Kubernetes</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/4.-kubernetes-code-to-deployment/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/4.-kubernetes-code-to-deployment/</guid><description>&lt;p>A typical Kubernetes workflow follows the following steps-&lt;/p>
&lt;ol>
&lt;li>Write code&lt;/li>
&lt;li>Containerize app&lt;/li>
&lt;li>Send to container registry&lt;/li>
&lt;li>Deploy to Kubernetes&lt;/li>
&lt;/ol>
&lt;div class="mermaid">
 graph TD
 A[Write Code] --> B
 B[Containerzie app] --> C
 C[Send to container registry] --> D[Deploy to Kubernetes]
&lt;/div>
&lt;h4 id="1-write-code">1. Write Code&lt;/h4>
&lt;p>This step is pretty self explanatory. We write code that solves a business problem. For microservices/distributed systems we write code in multiple small cohesive services so that they can be deployed independently.&lt;/p></description></item><item><title>#03 - Kubernetes Storage</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/3.-kubernetes-storage/</link><pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/3.-kubernetes-storage/</guid><description>&lt;p>Pods in Kubernetes are volatile. That means if a pod crashes or restarts then the data stored previously is lost. &lt;strong>Volumes&lt;/strong> in Kubernetes decouple storage from pods and provides a method for persisting data.&lt;/p>
&lt;p>For persistent storage in Kubernetes, we need to know 3 things.&lt;/p></description></item><item><title>#02 - Kubernetes Networking</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/2.-kubernetes-networking/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/2.-kubernetes-networking/</guid><description>&lt;p>Kubernetes is a container orchestration platform. It is used to help containers in a cluster communicate between them in an easy way. This is where networking in Kubernetes kicks in. To understand how Kubernetes works, knowing its basic underlying networking concepts is a fundamental necessity.&lt;/p></description></item><item><title>#01 - Kubernetes Overview</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/1.-kubernetes-basics/</link><pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/1.-kubernetes-basics/</guid><description>&lt;h4 id="what-is-kubernetes">What is Kubernetes?&lt;/h4>
&lt;ul>
&lt;li>Kubernetes is an open source platform for running &lt;strong>cloud native apps&lt;/strong>&lt;/li>
&lt;li>Its a layer over Vms and provide a rich set of APIs for running cloud native apps&lt;/li>
&lt;/ul>
&lt;h4 id="what-are-cloud-native-apps">What are cloud native apps?&lt;/h4>
&lt;ul>
&lt;li>Cloud native apps are built of small interacting services that work together to do something useful&lt;/li>
&lt;li>Making them small makes them easy to &lt;strong>scale&lt;/strong> and &lt;strong>update&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="prerequisites-to-learn-kubernetes">Prerequisites to learn Kubernetes?&lt;/h4>
&lt;p>Compulsory requirements-&lt;/p></description></item><item><title>Monitor Kubernetes Apps through Metrics, Logs and Traces (MLT)</title><link>https://rafed.github.io/devra/posts/cloud/kubernetes/mlt-in-kubernetes/</link><pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/kubernetes/mlt-in-kubernetes/</guid><description>&lt;p>Metrics, Logs and Traces (MLT) are the three pillars of monitoring that can give us complete observability of a system.&lt;/p>
&lt;p>In this article, we&amp;rsquo;re going to set up all three of MLT on a Kubernetes platform to monitor an app made with microservices.&lt;/p></description></item><item><title>#00 - Kubernetes CLI Cheat Sheet (kubectl, helm, minikube)</title><link>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/0.-kubernetes-cheat-sheet-kubectl-helm-minikube/</link><pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified--simplified/0.-kubernetes-cheat-sheet-kubectl-helm-minikube/</guid><description>&lt;p>This cheat sheet focuses on the most important CLI commands for Kubectl, helm and minikube CLIs.&lt;/p>
&lt;p>But what are the differences between them you ask?&lt;/p>
&lt;ul>
&lt;li>&lt;strong>kubectl&lt;/strong>: The most important CLI to learn. It is used to manage a Kubernetes cluster&lt;/li>
&lt;li>&lt;strong>helm&lt;/strong>: Package manager for Kubernetes. It is sort of like &lt;em>apt install&lt;/em> in Linux but for installing services in Kubernetes clusters&lt;/li>
&lt;li>&lt;strong>minikube&lt;/strong>: CLI for running Kubernetes locally&lt;/li>
&lt;/ul>
&lt;h2 id="1-kubectl">1. kubectl&lt;/h2>
&lt;h4 id="enable-autocomplete">Enable autocomplete&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ source &amp;lt;&lt;span style="color:#f92672">(&lt;/span>kubectl completion bash&lt;span style="color:#f92672">)&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;source &amp;lt;(kubectl completion bash)&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="context-and-configuration">Context and configuration&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl config current-context
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl config view
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl config set-context mia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl config use-context mia
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="run-yaml-files--make-infrastructural-changes">Run Yaml files / Make infrastructural changes&lt;/h4>
&lt;h5 id="make-a-deployment">Make a deployment&lt;/h5>
&lt;p>&lt;em>Make sure to make a my-manifest.yaml file first!&lt;/em>&lt;/p></description></item><item><title>Getting Started with Kubernetes using Minikube (and Django)</title><link>https://rafed.github.io/devra/posts/cloud/kubernetes/getting-started-with-kubernetes-using-minikube/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/kubernetes/getting-started-with-kubernetes-using-minikube/</guid><description>&lt;p>Today at work, I was asked whether I could deploy an application to a Kubernetes cluster within a few days. Although I am fairly familiar with container based technologies like docker and docker-compose, the Kubernetes side of things was something I hadn&amp;rsquo;t explored before. Nevertheless, I replied that it shouldn&amp;rsquo;t be a problem. Surely, how different could it be from docker-compose?&lt;/p></description></item><item><title>All Kinds of "AAS" in Cloud Computing</title><link>https://rafed.github.io/devra/posts/cloud/all-aas-in-cloud-computing/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/all-aas-in-cloud-computing/</guid><description>&lt;p>From an end users perspective, there are three kinds of aaS in cloud computing. By aaS I mean &amp;ldquo;as a Service&amp;rdquo;. They aaS-es are:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="#iaas-infrastructure-as-a-service">IaaS - Infrastructure as a service&lt;/a>&lt;/li>
&lt;li>&lt;a href="#paas-platform-as-a-service">PaaS - Platform as a service&lt;/a>&lt;/li>
&lt;li>&lt;a href="#saas-software-as-a-service">SaaS - Software as a service&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>As businesses are moving more towards the cloud, understanding the differences between the types of services and also knowing some of the service providers is essential. This article provides a brief intro to these services.&lt;/p></description></item><item><title>How I Accidentally Visited a Datacenter</title><link>https://rafed.github.io/devra/posts/cloud/how-i-accidentally-visisted-a-datacenter/</link><pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/how-i-accidentally-visisted-a-datacenter/</guid><description>&lt;p>So, some of my friends were looking for a VPS for their research work. High config AWS or GCP is really expensive so they were looking for alternatives. That&amp;rsquo;s when our professor told them to meet a guy called &lt;a href="https://www.facebook.com/mahedi.cse">Mahedi&lt;/a>. They dragged me along to meet him and I&amp;rsquo;m glad that they did.&lt;/p></description></item></channel></rss>