<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on DevRa</title><link>https://rafed.github.io/devra/tags/programming/</link><description>Recent content in Programming on DevRa</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 14 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rafed.github.io/devra/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Reduce Too Many if-elif in Python</title><link>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/too-many-if-elif/</link><pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/too-many-if-elif/</guid><description>&lt;p>&lt;code>if-elif&lt;/code> statements are one of the used features of Python. However, they can become hard to read when the number of &lt;code>elif&lt;/code> statements increase. Let&amp;rsquo;s consider the following code for a game:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Assume run(), stop(), shoot(), guard() methods are defined&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>command &lt;span style="color:#f92672">=&lt;/span> input()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> command &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;run&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> command &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;stop&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> command &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;shoot&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shoot()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> command &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;guard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> guard()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are multiple actions that our protagonist can do. Additionally, the game devs are planning to add more actions for the protagonist. Soon this action list will become big and hard to read.&lt;/p></description></item><item><title>Things You're doing wrong in Python</title><link>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/things-youre-doing-wrong-in-python/</link><pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/things-youre-doing-wrong-in-python/</guid><description>&lt;p>Avoid these things in Python to write better code and make better software.&lt;/p></description></item><item><title>Useful f-string Techniques in Python</title><link>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/useful-f-string-techniques-in-python/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/useful-f-string-techniques-in-python/</guid><description>&lt;p>Python f-strings are super useful for formatting strings. Before python 3.6 &lt;em>str.format()&lt;/em> were used. But f-strings makes string manipulation much more easier and effective.&lt;/p></description></item><item><title>A better dictionary in python</title><link>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/a-better-dictionary-in-python/</link><pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/a-better-dictionary-in-python/</guid><description>&lt;p>A Python dictionary is a very useful data structure that stores key value pairs. A python dictionary is declared like the following-&lt;/p></description></item><item><title>How to Connect Django to an Existing Legacy Database</title><link>https://rafed.github.io/devra/posts/database/how-to-connect-django-to-existing-database/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/database/how-to-connect-django-to-existing-database/</guid><description>&lt;p>Do you need to connect a django project with an exiting database that already contains data? In this tutorial we will learn how to connect an existing MySQL database to a django project.&lt;/p>
&lt;h2 id="get-an-existing-database">Get an existing database&lt;/h2>
&lt;p>If you don&amp;rsquo;t have an existing database to play with, you can get one at &lt;a href="https://www.mysqltutorial.org/mysql-sample-database.aspx/">mysqltutorial.org&lt;/a>&lt;/p></description></item><item><title>Tips &amp; Tricks to Make Python Faster!</title><link>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/tips-and-tricks-to-make-python-faster/</link><pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/tips-and-tricks-to-make-python-faster/</guid><description>&lt;p>Python is known for being slow in terms of execution speed. However, you can try out the following tricks to make your code faster.&lt;/p></description></item><item><title>Powerful Python One Liners</title><link>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/powerful-python-one-liners/</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/awesome-python-tips--tricks/powerful-python-one-liners/</guid><description>&lt;p>Why write more code when you can write less? Become a Python Ninja with the below one-liners.&lt;/p></description></item><item><title>Cases Used in Programming</title><link>https://rafed.github.io/devra/posts/programming/cases-used-in-programming/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/programming/cases-used-in-programming/</guid><description>&lt;p>You&amp;rsquo;ve probably heard about following camel cases when naming functions and variables. There are more types of cases out there. In this post, we will discover other cases followed in naming conventions and where they are commonly used.&lt;/p></description></item><item><title>Algorithms that I Learned</title><link>https://rafed.github.io/devra/posts/programming/algorithms-i-learned/</link><pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/programming/algorithms-i-learned/</guid><description>&lt;p>This is just a personal list of algorithms that I have learned over time. Since I keep on forgetting them, I decided I should make a list and review them from time to time. If you find the list helpful, thank me in the comments below.&lt;/p></description></item><item><title>Most Useful VScode Shortcuts</title><link>https://rafed.github.io/devra/posts/programming/most-useful-vscode-shortcuts/</link><pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/programming/most-useful-vscode-shortcuts/</guid><description>&lt;p>VScode is my go-to editor now, but I keep forgetting all the nice shortcuts and commands. This article is a cheat sheet for me to look back when I forget my favorite ones.&lt;/p>
&lt;p>VScode has different key bindings for each OS. Although most of the following should be general, if any of them isn&amp;rsquo;t working, the full bindings are available here for &lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf">Linux&lt;/a>, &lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf">Windows&lt;/a>, &lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf">MacOS&lt;/a>.&lt;/p></description></item><item><title>Parsing C++/Java/C# the Easy Way (with srcML)</title><link>https://rafed.github.io/devra/posts/programming/parsing-cpp-java-cs-with-srcml/</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/programming/parsing-cpp-java-cs-with-srcml/</guid><description>&lt;p>Recently I needed to parse C++ code to analyze some projects. I tried out several parsers (clang, libclang, cppast) but I just couldn&amp;rsquo;t get them to work for me. I didn&amp;rsquo;t find their documentation easy to understand. That&amp;rsquo;s maybe because I&amp;rsquo;m not so familiar with the C++ ecosystem. I suffered for quite a while until I found this awesome tool called &lt;a href="https://www.srcml.org/">srcML&lt;/a>.&lt;/p></description></item><item><title>How Many Programming Languages Should I learn</title><link>https://rafed.github.io/devra/posts/programming/how-many-programming-languages-to-learn/</link><pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/programming/how-many-programming-languages-to-learn/</guid><description>&lt;p>Has it ever occurred to you, that you see a new programming language and you feel an urge to learn it? If love hobby programming then I&amp;rsquo;m pretty sure that you&amp;rsquo;ve had this dilemma of choosing whether to learn a language or not. Sometimes the fear of missing out makes us want to learn as many languages as possible. But how many languages do we actually need to learn?&lt;/p></description></item><item><title>Image Clustering</title><link>https://rafed.github.io/devra/posts/machine-learning/image-clustering/</link><pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/machine-learning/image-clustering/</guid><description>&lt;p>Clustering is a technique to group similar elements together. The following shows a simple program codebase is a small attempt to cluster colors in images.&lt;/p>
&lt;p>At the heart of the program lies the &lt;strong>K-Means algorithm&lt;/strong>. The source is available at &lt;a href="https://github.com/rafed123/Image-clustering">github.com/rafed/Image-clustering&lt;/a>.&lt;/p></description></item><item><title>How Difficult is Programming</title><link>https://rafed.github.io/devra/posts/programming/how-difficult-is-programming/</link><pubDate>Sat, 16 Sep 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/programming/how-difficult-is-programming/</guid><description>&lt;p>One of the first questions asked by beginners who want to start programming is, &amp;ldquo;How difficult is programming?&amp;rdquo; The answer in short is, &lt;!-- more --> &lt;strong>learning a programming language is easy. Writing a good program is difficult&lt;/strong>.&lt;/p></description></item></channel></rss>